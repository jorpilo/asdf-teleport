#!/usr/bin/env bash

set -euo pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=./lib/utils.bash
source "${plugin_dir}/lib/utils.bash"

mkdir -p "$ASDF_DOWNLOAD_PATH"

${ASDF_OS:=""}
${ASDF_ARCH:=""}

if [[ -n "$ASDF_OS" ]]; then
	echo "No ASDF_OS set, detecting..."
	ASDF_OS=$(detect_os)
fi

if [[ -z "$ASDF_ARCH" ]]; then
	echo "No ASDF_ARCH set, detecting..."
	ASDF_ARCH=$(detect_arch)
fi

echo "Downloading release $ASDF_INSTALL_VERSION for OS: $ASDF_OS, Arch: $ASDF_ARCH"

release=$(download_versions |
	filter_pre-release |
	select_version "$ASDF_INSTALL_VERSION" |
	filter_os "$ASDF_OS" | filter_arch "$ASDF_ARCH" |
	assets_length)

url=$(jq -re '.publicUrl' <<<"$release")
sha256=$(jq -re '.sha256' <<<"$release")
version=$(jq -re '.version' <<<"$release")
name=$(jq -re '.name' <<<"$release")

filename="$ASDF_DOWNLOAD_PATH/$name"
echo "* Downloading $ release $version..."

# # Download tar.gz file to the download directory
download_release "$url" "$filename"

check_sha256 "$filename" "$sha256"
# #  Extract contents of tar.gz file into the download directory
tar -xzf "$filename" -C "$ASDF_DOWNLOAD_PATH" --strip-components=1 || fail "Could not extract $filename"

# # Remove the tar.gz file since we don't need to keep it
rm "$filename"
